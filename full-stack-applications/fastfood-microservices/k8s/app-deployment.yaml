apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastfood-api
  namespace: fastfood
  labels:
    app: fastfood-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fastfood-api
  template:
    metadata:
      labels:
        app: fastfood-api
    spec:
      initContainers:
      - name: init-database
        image: fastfood-api:latest
        command: ["python", "/app/scripts/init_database.py"]
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: fastfood-config
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fastfood-secrets
              key: JWT_SECRET_KEY
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: fastfood-secrets
              key: ADMIN_USERNAME
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fastfood-secrets
              key: ADMIN_PASSWORD
        envFrom:
        - configMapRef:
            name: fastfood-config
      containers:
      - name: fastfood-api
        image: fastfood-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: fastfood-config
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fastfood-secrets
              key: JWT_SECRET_KEY
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: fastfood-secrets
              key: ADMIN_USERNAME
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fastfood-secrets
              key: ADMIN_PASSWORD
        envFrom:
        - configMapRef:
            name: fastfood-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: fastfood-api-service
  namespace: fastfood
spec:
  selector:
    app: fastfood-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP 